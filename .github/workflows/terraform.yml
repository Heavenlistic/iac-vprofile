name: Vprofile IAC

on:
  push:
    branches:
      - main
      - stage
    paths:
      - terraform/**
  pull_request:
    branches:
      - main
    paths:
      - terraform/**

env:
  # Credentials for deployment to AWS
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}         # AWS Access Key ID
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # AWS Secret Access Key

  # S3 Bucket for the Terraform state
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
  AWS_REGION: us-east-1                    # AWS region for resources
  EKS_CLUSTER: vprofile-eks                 # EKS cluster name

jobs:
  terraform:
    name: "Terraform Workflow"
    runs-on: ubuntu-latest
    
    defaults: 
      run:
        shell: bash
        working-directory: ./terraform
        
    steps:
      # Checkout the repository
      - name: Checkout Source Code
        uses: actions/checkout@v4

      # Set up Terraform
      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.7  # Specify your Terraform version

      # Initialize Terraform
      - name: Terraform Init
        run: terraform init -backend-config="bucket=${{ env.BUCKET_TF_STATE }}"

      # Check Terraform formatting
      - name: Terraform Format Check
        run: terraform fmt -check

      # Validate Terraform configuration
      - name: Terraform Validate
        run: terraform validate

      # Plan Terraform changes
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false -out=planfile

      # Apply Terraform changes if the plan is successful
      - name: Terraform Apply
        if: ${{ steps.plan.outcome == 'success' }}
        run: terraform apply -no-color -input=false planfile

      # Plan to destroy resources (this step can be run manually or conditionally)
      - name: Terraform Plan Destroy
        id: destroy_plan
        run: terraform plan -destroy -no-color -input=false -out=destroy_planfile

      # Apply Terraform destroy plan if needed (uncomment to enable)
      # - name: Terraform Destroy
      #   if: ${{ steps.destroy_plan.outcome == 'success' }}
      #   run: terraform apply -no-color -input=false destroy_planfile

      # Check if the Terraform Plan step failed
      - name: Terraform Plan Status
        if: ${{ steps.plan.outcome == 'failure' }}
        run: exit 1
